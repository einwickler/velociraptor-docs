name: Windows.Forensics.AD.ADTimeline
description: |
  Runs ADTimeline from ANSSI-FR: "Timeline of Active Directory changes 
  with replication metadata"
  https://github.com/ANSSI-FR/ADTimeline

author: Jannik Stuckst√§tte - @einwickler

type: CLIENT

tools:
  - name: ADTimeline
    url: https://github.com/ANSSI-FR/ADTimeline/archive/refs/heads/master.zip

precondition: SELECT OS From info() where OS = 'windows'

sources:
    - name: Timeline
      query: |
        LET WorkDir <= tempdir(remove_last='Y')
    
        LET Toolzip <= SELECT FullPath
        FROM Artifact.Generic.Utils.FetchBinary(ToolName="ADTimeline",
                                                 IsExecutable=FALSE)
           
        LET _ <= SELECT *
        FROM unzip(filename=Toolzip.FullPath, output_directory=WorkDir)
           
        LET ADTimelineScript <= path_join(
            components=[WorkDir, 'ADTimeline-master', 'ADTimeline.ps1'],
            path_type='windows')
           
        LET ExecOut <= SELECT * FROM execve(
            argv=['powershell', '-ExecutionPolicy', 'Bypass', '-NoProfile', 
            '-Command',
            'Set-Location "' + WorkDir + '"; ' + '.\\ADTimeline-master\\ADTimeline.ps1'],
            sep="\n")
            
        
        LET _ <= SELECT * FROM scope()
            where log(message="Script Stdout:")
        
        LET _ <= SELECT * FROM ExecOut
            WHERE log(message=Stdout)
            
        LET _ <= SELECT * FROM scope()
            where log(message="Script Stderr:")
    
        LET _ <= SELECT * FROM ExecOut
            WHERE log(message=Stderr)
            
        LET LogFiles <= SELECT *, upload(file=OSPath) FROM glob(globs="logfile_*.log", 
            root=WorkDir)
            
        LET LogFileContent <= read_file(filename=LogFiles[0].OSPath, 
            length=atoi(string=LogFiles[0].Size))
            
        LET _ <= SELECT * FROM scope()
            where log(message="Logfile output:")
        
        LET _ <= SELECT _value as Line 
            FROM foreach(row=split(string=LogFileContent, sep="\n"))
            WHERE log(message=Line)
        
        LET TimelineFiles <= SELECT OSPath FROM glob(globs="timeline_*.csv", 
            root=WorkDir)
           
        SELECT *, upload(file=TimelineFiles[0].OSPath) AS Upload 
            FROM parse_csv(filename=TimelineFiles[0].OSPath, separator=';')
            
        

    - name: ADobjects
      query: |
        LET ADobjectsFiles <= SELECT OSPath FROM glob(globs="ADobjects_*.xml", 
            root=WorkDir)
        
        SELECT parse_xml(file=ADobjectsFiles[0].OSPath) AS ADobjects, upload(file=ADobjectsFiles[0].OSPath) AS Upload 
        FROM scope()